<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       https://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 数据源信息 -->
    <bean id="lsy-hardware-druidDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close" primary="false">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${spring.datasource.url}"/>
        <property name="username" value="${spring.datasource.username}"/>
        <property name="password" value="${spring.datasource.password}"/>
        <property name="driverClassName" value="${spring.datasource.driver-class-name}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="500"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="validationQuery" value="SELECT 'x'"/>
        <!--单位：秒,检测连接是否有效的超时时间,底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法-->
        <property name="validationQueryTimeout" value="30"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="false"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="100"/>
        <property name="asyncInit" value="true"/>

        <!-- 打开removeAbandoned功能：连接泄漏监测 -->
        <property name="removeAbandoned" value="false"/>
        <property name="removeAbandonedTimeout" value="7200"/>
        <property name="logAbandoned" value="true"/>
    </bean>

    <!-- 管理事务的类-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="lsy-hardware-druidDataSource"/>
    </bean>

    <!-- 按标准进行统一 如果有扩展，自己进行补充。 -->
    <tx:advice id="engineTxAdvice" transaction-manager="txManager">
        <!-- 配置事务的属性-->
        <tx:attributes>
            <!-- 读取 -->
            <tx:method name="query*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="list*" propagation="REQUIRED" read-only="true"/>
            <!-- 新增 -->
            <tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <!-- 删除 -->
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="remove*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <!-- 修改 -->
            <tx:method name="modify*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <!-- 其他 -->
            <tx:method name="*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="lsy-hardware-druidDataSource"/>
        <property name="configLocation" value="classpath:sql/mysql/mybatis-config.xml"/>
        <property name="mapperLocations">
            <array>
                <value>classpath*:sql/mysql/**/*Mapper.xml</value>
            </array>
        </property>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <props>
                            <!--用来识别数据库-->
                            <prop key="helperDialect">${pagehelper.helperDialect}</prop>
                        </props>
                    </property>
                </bean>
            </array>
        </property>
        <property name="databaseIdProvider" ref="databaseIdProvider"/>
    </bean>

    <!--配置一个databaseIdProvider sql如果有方言，自己增加databaseId属性-->
    <bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
        <property name="properties">
            <props>
                <prop key="MySQL">mysql</prop>
                <prop key="Oracle">oracle</prop>
                <prop key="SQL Server">sqlserver</prop>
                <prop key="DB2">db2</prop>
            </props>
        </property>
    </bean>

    <tx:annotation-driven transaction-manager="txManager"/>

</beans>